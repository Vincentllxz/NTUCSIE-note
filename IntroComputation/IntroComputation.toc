\babel@toc {english}{}\relax 
\contentsline {chapter}{\numberline {0}Basic Knowledge}{2}{chapter.0}%
\contentsline {section}{\numberline {0.1}Mathematical Notions}{2}{section.0.1}%
\contentsline {subsection}{\numberline {0.1.1}Set \& its operation}{2}{subsection.0.1.1}%
\contentsline {subsection}{\numberline {0.1.2}Function \& Relation}{3}{subsection.0.1.2}%
\contentsline {subsection}{\numberline {0.1.3}String \& Languages}{3}{subsection.0.1.3}%
\contentsline {section}{\numberline {0.2}Definitions, Theorems, and Proofs}{4}{section.0.2}%
\contentsline {subsection}{\numberline {0.2.1}Proof by Construction}{4}{subsection.0.2.1}%
\contentsline {subsection}{\numberline {0.2.2}Proof by Contradiction}{4}{subsection.0.2.2}%
\contentsline {subsection}{\numberline {0.2.3}Proof by Induction}{4}{subsection.0.2.3}%
\contentsline {chapter}{\numberline {1}Regular Languages}{5}{chapter.1}%
\contentsline {section}{\numberline {1.1}Deterministic Finite Automata (DFA)}{5}{section.1.1}%
\contentsline {subsection}{\numberline {1.1.1}Definition of Computation}{6}{subsection.1.1.1}%
\contentsline {subsection}{\numberline {1.1.2}Regular Operations}{6}{subsection.1.1.2}%
\contentsline {section}{\numberline {1.2}Nondeterministic Finite Automata (NFA)}{7}{section.1.2}%
\contentsline {subsection}{\numberline {1.2.1}Equivalence of DFA and NFA}{9}{subsection.1.2.1}%
\contentsline {subsection}{\numberline {1.2.2}Closure under reqular operations}{10}{subsection.1.2.2}%
\contentsline {section}{\numberline {1.3}Regular expressions}{12}{section.1.3}%
\contentsline {subsection}{\numberline {1.3.1}Convert a DFA to a regular expression}{14}{subsection.1.3.1}%
\contentsline {section}{\numberline {1.4}Pumping lemma}{16}{section.1.4}%
\contentsline {subsection}{\numberline {1.4.1}Non regular language}{16}{subsection.1.4.1}%
\contentsline {subsection}{\numberline {1.4.2}Example for Pumping Lemma}{17}{subsection.1.4.2}%
\contentsline {chapter}{\numberline {2}Context-Free Languages}{19}{chapter.2}%
\contentsline {section}{\numberline {2.1}Context-Free Grammars (CFG)}{19}{section.2.1}%
\contentsline {subsection}{\numberline {2.1.1}Definition of CFG}{20}{subsection.2.1.1}%
\contentsline {subsection}{\numberline {2.1.2}Examples of CFGs}{21}{subsection.2.1.2}%
\contentsline {subsection}{\numberline {2.1.3}Design of CFGs}{22}{subsection.2.1.3}%
\contentsline {subsection}{\numberline {2.1.4}Parse Trees and Ambiguity}{22}{subsection.2.1.4}%
\contentsline {section}{\numberline {2.2}Chomsky Normal Form}{24}{section.2.2}%
\contentsline {subsection}{\numberline {2.2.1}Procedure of Converting CFG to CNF}{25}{subsection.2.2.1}%
\contentsline {subsection}{\numberline {2.2.2}Infinite Loop in Converting}{25}{subsection.2.2.2}%
\contentsline {section}{\numberline {2.3}Pushdown Automata}{26}{section.2.3}%
\contentsline {subsection}{\numberline {2.3.1}Formal definition of PDA}{27}{subsection.2.3.1}%
\contentsline {subsection}{\numberline {2.3.2}Nondeterministic situation}{27}{subsection.2.3.2}%
\contentsline {subsection}{\numberline {2.3.3}Converting CFL to PDA}{29}{subsection.2.3.3}%
\contentsline {subsection}{\numberline {2.3.4}Converting PDA to CFL}{30}{subsection.2.3.4}%
\contentsline {subsection}{\numberline {2.3.5}Procedure of converting PDA to CFL}{32}{subsection.2.3.5}%
